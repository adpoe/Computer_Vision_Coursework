############################################
### @author Anthony (Tony)
### @email adp59@pitt.edu
### CS1674 - Computer Vision
### Assignment #06 - Writeup for Questions in Assignment Prompt
############################################

Question:  How and why does the SSD differ based on the values of K?
    For different values of k, we converge upon a different number of clusters. And the number of clusters that we select are equal to the number of different values
    that the resulting quantized image can have in each of its pixel cells.
    
    For instance, if k=2, all of the pixels in our **quantized image** must have a value in the range [0,1].

    Likewise, if k=5, then all of the pixels in our **quantized image** must have a values in the range [0, 4]

    However, we know that the range of possible values for the **original image** will ALWAYS be [0, 255].

    So, when we compute the SSD using different values of K, we will __necessarily__ be computing sets of numbers in different ranges (i.e. - [0,k])
    against values in the range [0,255].

    And because the ranges of possible values must change, according to k--which dictates which values are possible--we will necessarily have different
    results when we compute the SSD for different values of k.


Writeup:  What did I see for edge detection?
    For the edge detection part of this assignment, I decided to again use the Fish image that I had been working with in Part I.

    I mostly re-used code from Assignment #04, and was able to string together the relevant parts to achieve edge detection in the image without issue.

    For a THRESHOLD --> I chose to use threshold of **2 times** the average gradient magnitude. This worked reasonably well, and I found that the image
    my algorithm outputted with these parameters closely resembled the example image shown on slide 19, and referenced in the assignment prompt.

    You can change the threshold by passing in a different parameter, and you will see similar results, but a threshold of 2 times the overall average seems to
    work well in practice.

    I did notice that NOT ALL true 'edges' were identified with a threshold of 2, but I find that the strongest ones were indeed identified correctly,
    and so overall I'm happy with these results.


